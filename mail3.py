import pandas as pd
import smtplib
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
from datetime import datetime

current_date = datetime.now().strftime('%d-%m-%Y')
# Email configuration
sender_email = "abc@gmail.com"  # Enter your email
sender_password = "wwwn aqlf gcxn uuuu"  # Enter your app password

# Read the email subject
with open(f"data/title_{current_date}.txt", "r") as email_content_file:
    email_subject = email_content_file.readline().strip()

# Excel file with email addresses and names
excel_file = "user_data.xlsx"

# List of text files to include in the email body
text_files = [
    {"title": "Meeting Minutes", "path": f"data/minutes_{current_date}.txt"},
    {"title": "Summary", "path": f"data/summary_{current_date}.txt"},
]

# Read email addresses and names from Excel
df = pd.read_excel(excel_file)
email_addresses = df["Email Address"].tolist()
names = df["Name"].tolist()

# Email server settings (for Gmail)
smtp_server = "smtp.gmail.com"
smtp_port = 587

# Iterate through email addresses and compose the email with text content in the body
for idx, recipient_email in enumerate(email_addresses):
    recipient_name = names[idx]

    # Create message container
    msg = MIMEMultipart()
    msg["From"] = sender_email
    msg["To"] = recipient_email
    msg["Subject"] = email_subject

    # Constructing the email body template
    email_text = f"Hi {recipient_name},\n\n"
    email_text += f"This is an Automated mail regarding the Contents of the Meeting '{email_subject}' you attended.\n"
    email_text += "The autogenerated meeting details and References are as follows:\n\n"

    # Add text from each file
    for file_data in text_files:
        with open(file_data["path"], "r") as file:
            email_text += f"--- {file_data['title']} ---\n{file.read()}\n\n"

    # Additional content - "Space", "Regards", and the smiley icon within the email body
    email_text += "\n" * 2  # 2 new lines
    email_text += f"Regards, Automated Tool ðŸ˜€"  # Smiley emoji (Unicode)

    # Attach the text content to the email body
    msg.attach(MIMEText(email_text, "plain"))

    # Send the email
    try:
        server = smtplib.SMTP(smtp_server, smtp_port)
        server.starttls()
        server.login(sender_email, sender_password)
        server.sendmail(sender_email, recipient_email, msg.as_string())
        server.quit()
        print(f"Email sent to {recipient_email}")
    except Exception as e:
        print(f"Failed to send email to {recipient_email}: {str(e)}")
